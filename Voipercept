import socket

def intercept_voip_sessions(host='0.0.0.0', port=5060):
    """
    Intercepts VOIP sessions on the specified host and port.
    
    Parameters:
    host (str): The IP address to bind the socket to. Default is '0.0.0.0' (all interfaces).
    port (int): The port number to listen on. Default is 5060 (common for SIP).
    """
    try:
        # Create a raw socket to capture VOIP packets
        sock = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_UDP)
        sock.bind((host, port))
        print(f"Listening for VOIP sessions on {host}:{port}...")

        while True:
            try:
                # Receive data from the socket
                data, addr = sock.recvfrom(65535)
                print(f"Received packet from {addr}: {data}")
                
                # Here you can add further processing of the VOIP data
                # For example, parsing SIP messages or RTP streams

            except Exception as e:
                print(f"Error receiving packet: {e}")

    except PermissionError:
        print("Permission denied: You need to run this script with administrative privileges.")
    except Exception as e:
        print(f"An error occurred: {e}")
    finally:
        sock.close()
        print("Socket closed.")

if __name__ == "__main__":
    intercept_voip_sessions()
